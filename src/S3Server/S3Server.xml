<?xml version="1.0"?>
<doc>
    <assembly>
        <name>S3Server</name>
    </assembly>
    <members>
        <member name="T:S3ServerLibrary.BucketCallbacks">
            <summary>
            Callback methods for bucket operations.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.Delete">
            <summary>
            Delete a bucket.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.DeleteTagging">
            <summary>
            Delete a bucket's tags.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.DeleteWebsite">
            <summary>
            Delete a bucket's website configuration.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.Exists">
            <summary>
            Check for the existence of a bucket. 
            Return true if it exists, false if it doesn't.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.Read">
            <summary>
            Enumerate a bucket.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.ReadAcl">
            <summary>
            Read a bucket's access control policy.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.ReadLogging">
            <summary>
            Retrieve logging configuration for this bucket.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.ReadLocation">
            <summary>
            Retrieve location (region) constraint from the server for this bucket.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.ReadTagging">
            <summary>
            Read a bucket's tags.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.ReadVersions">
            <summary>
            Get a list of object versions in the bucket.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.ReadVersioning">
            <summary>
            Get a bucket's versioning policy. 
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.ReadWebsite">
            <summary>
            Get a bucket's website configuration.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.Write">
            <summary>
            Write a bucket.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.WriteAcl">
            <summary>
            Write an ACL to a bucket, deleting the previous ACL.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.WriteLogging">
            <summary>
            Write logging configuration to a bucket, deleting the previous configuration.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.WriteTagging">
            <summary>
            Write tags to a bucket, deleting the previous tags.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.WriteVersioning">
            <summary>
            Set a bucket's versioning policy.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.BucketCallbacks.WriteWebsite">
            <summary>
            Set a bucket's website configuration.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.BucketCallbacks.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.Callbacks.ObjectCallbacks">
            <summary>
            Callback methods for object operations.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.Exists">
            <summary>
            Check for the existence of an object.
            Return the ObjectMetadata if it exists, null if it doesn't.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.Write">
            <summary>
            Write an object.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.WriteAcl">
            <summary>
            Write an object's access control list, replacing the previous ACL.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.WriteTagging">
            <summary>
            Write tags to an object, replacing the previous tags.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.WriteLegalHold">
            <summary>
            Write a legal hold status to an object.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.WriteRetention">
            <summary>
            Write a retention status to an object.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.Read">
            <summary>
            Read an object.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.ReadAcl">
            <summary>
            Read an object's access control list.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.ReadRange">
            <summary>
            Read a range of bytes from an object.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.ReadTagging">
            <summary>
            Read an object's tags.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.ReadLegalHold">
            <summary>
            Read an object's legal hold status.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.ReadRetention">
            <summary>
            Read an object's retention status.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.Delete">
            <summary>
            Delete an object.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.DeleteTagging">
            <summary>
            Delete an object's tags.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.Callbacks.ObjectCallbacks.DeleteMultiple">
            <summary>
            Delete multiple objects.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.Callbacks.ObjectCallbacks.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.ServiceCallbacks">
            <summary>
            Callback methods for service operations.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.ServiceCallbacks.ListBuckets">
            <summary>
            List all buckets.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.ServiceCallbacks.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.Common">
            <summary>
            Common static methods.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.LoggingSettings">
            <summary>
            Enable or disable logging for various items.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.LoggingSettings.HttpRequests">
            <summary>
            Enable or disable debugging for HTTP requests.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.LoggingSettings.S3Requests">
            <summary>
            Enable or disable debugging for S3 request construction.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.LoggingSettings.Exceptions">
            <summary>
            Enable or disable debugging for exceptions.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.LoggingSettings.#ctor">
            <summary>
            Instantiates the object.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.ObjectExtensions">
            <summary>
            Object extensions.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.ObjectExtensions.ToJson(System.Object,System.Boolean)">
            <summary>
            Return a JSON string of this object.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Enable or disable pretty print.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="T:S3ServerLibrary.S3Context">
            <summary>
            S3 context.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Context.Request">
            <summary>
            S3 request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Context.Response">
            <summary>
            S3 response.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Context.Metadata">
            <summary>
            User metadata, supplied by your application.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Context.Http">
            <summary>
            HTTP context from which the S3 context was created.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Context.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Context.#ctor(WatsonWebserver.HttpContext,System.Collections.Generic.List{System.String},System.Object,System.Action{System.String})">
            <summary>
            Instantiate.
            </summary>
            <param name="ctx">HTTP context.</param>
            <param name="baseDomains">List of base domains, if any.</param>
            <param name="metadata">User metadata, provided by your application.</param>
            <param name="logger">Method to invoke to send log messages.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Exception">
            <summary>
            S3 exception.  Throw an instance of this object if an S3 error response needs to be returned to the caller.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Exception.Error">
            <summary>
            Error.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Exception.InnerException">
            <summary>
            Inner exception.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Exception.InnerExceptionJson">
            <summary>
            JSON representation of the inner exception.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Exception.HttpStatusCode">
            <summary>
            Status code for the given exception.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Exception.#ctor(S3ServerLibrary.S3Objects.Error,System.Exception)">
            <summary>
            Instantiate.
            </summary>
            <param name="error">Error.</param>
            <param name="inner">Inner exception.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Object">
            <summary>
            S3 object.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.Key">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.VersionId">
            <summary>
            Version ID.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.IsLatest">
            <summary>
            Indicates if this version is the latest version for the object.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.LastModified">
            <summary>
            Timestamp from the last modification of the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.ETag">
            <summary>
            ETag of the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.Size">
            <summary>
            The size in bytes of the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.StorageClass">
            <summary>
            The class of storage where the resource resides.
            Valid values are STANDARD, REDUCED_REDUNDANCY, GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, OUTPOSTS.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.Owner">
            <summary>
            Object owner.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.Data">
            <summary>
            Stream containing data.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.DataBytes">
            <summary>
            Data in byte array form.  If the data was supplied as a stream, the stream will be fully read.  If the stream supports seeking, it will automatically seek to the beginning.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Object.DataString">
            <summary>
            Data in string form.  If the data was supplied as a stream, the stream will be fully read.  If the stream supports seeking, it will automatically seek to the beginning.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Object.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Object.#ctor(System.String,System.String,System.Boolean,System.DateTime,System.String,System.Int64,S3ServerLibrary.S3Objects.Owner,System.IO.Stream,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Key.</param>
            <param name="versionId">Version ID.</param>
            <param name="isLatest">Is latest.</param>
            <param name="lastModified">Last modified.</param>
            <param name="etag">ETag.</param>
            <param name="size">Size.</param>
            <param name="owner">Owner.</param>
            <param name="data">Stream containing data.</param>
            <param name="contentType">Content type.</param>
            <param name="storageClass">Storage class.</param>
        </member>
        <member name="M:S3ServerLibrary.S3Object.#ctor(System.String,System.String,System.Boolean,System.DateTime,System.String,System.Int64,S3ServerLibrary.S3Objects.Owner,System.Byte[],System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Key.</param>
            <param name="versionId">Version ID.</param>
            <param name="isLatest">Is latest.</param>
            <param name="lastModified">Last modified.</param>
            <param name="etag">ETag.</param>
            <param name="size">Size.</param>
            <param name="owner">Owner.</param>
            <param name="data">Stream containing data.</param>
            <param name="contentType">Content type.</param>
            <param name="storageClass">Storage class.</param>
        </member>
        <member name="M:S3ServerLibrary.S3Object.#ctor(System.String,System.String,System.Boolean,System.DateTime,System.String,System.Int64,S3ServerLibrary.S3Objects.Owner,System.String,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Key.</param>
            <param name="versionId">Version ID.</param>
            <param name="isLatest">Is latest.</param>
            <param name="lastModified">Last modified.</param>
            <param name="etag">ETag.</param>
            <param name="size">Size.</param>
            <param name="owner">Owner.</param>
            <param name="data">Stream containing data.</param>
            <param name="contentType">Content type.</param>
            <param name="storageClass">Storage class.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.AccessControlList">
            <summary>
            Amazon S3 access control list for a resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.AccessControlList.Grants">
            <summary>
            Grant specifying to whom rights are provided to the resource.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.AccessControlList.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.AccessControlList.#ctor(System.Collections.Generic.List{S3ServerLibrary.S3Objects.Grant})">
            <summary>
            Instantiate.
            </summary>
            <param name="grants">Grants.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.AccessControlPolicy">
            <summary>
            Amazon S3 access control policy for a resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.AccessControlPolicy.Owner">
            <summary>
            Resource owner.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.AccessControlPolicy.Acl">
            <summary>
            Access control list for the resource.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.AccessControlPolicy.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.AccessControlPolicy.#ctor(S3ServerLibrary.S3Objects.Owner,S3ServerLibrary.S3Objects.AccessControlList)">
            <summary>
            Instantiate.
            </summary>
            <param name="owner">Owner.</param>
            <param name="acl">ACL.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Bucket">
            <summary>
            Amazon S3 bucket.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Bucket.Name">
            <summary>
            The name of the bucket.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Bucket.CreationDate">
            <summary>
            The timestamp from bucket creation.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Bucket.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Bucket.#ctor(System.String,System.DateTime)">
            <summary>
            Instantiate.
            </summary>
            <param name="name">Bucket name.</param>
            <param name="creation">Creation timestamp.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.BucketLoggingStatus">
            <summary>
            Logging status for a bucket.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.BucketLoggingStatus.Enabled">
            <summary>
            Logging configuration for a bucket.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.BucketLoggingStatus.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.BucketLoggingStatus.#ctor(S3ServerLibrary.S3Objects.LoggingEnabled)">
            <summary>
            Instantiate.
            </summary>
            <param name="loggingEnabled">Logging enabled.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Buckets">
            <summary>
            A collection of buckets.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Buckets.BucketList">
            <summary>
            A list of individual buckets.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Buckets.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Buckets.#ctor(System.Collections.Generic.List{S3ServerLibrary.S3Objects.Bucket})">
            <summary>
            Instantiate.
            </summary>
            <param name="buckets">Buckets.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.CommonPrefixes">
            <summary>
            Common prefixes.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.CommonPrefixes.Prefixes">
            <summary>
            Prefix.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.CommonPrefixes.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.CommonPrefixes.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Instantiate.
            </summary>
            <param name="prefixes">Prefixes.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Condition">
            <summary>
            Condition that must be met in order to match a routing rule for a bucket website configuration.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Condition.HttpErrorCodeReturnedEquals">
            <summary>
            Assume a match if the HTTP error code returned matches the specified value.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Condition.KeyPrefixEquals">
            <summary>
            Assume a match if the key prefix is equal to the specified value.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Condition.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Condition.#ctor(System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="httpErrorCode">HTTP error code.</param>
            <param name="keyPrefix">Key prefix.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Deleted">
            <summary>
            Metadata about a deleted resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Deleted.Key">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Deleted.VersionId">
            <summary>
            The version identifier for the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Deleted.DeleteMarker">
            <summary>
            Indicates if the key represents a delete marker for the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Deleted.DeleteMarkerVersionId">
            <summary>
            The version ID associated with the delete marker.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Deleted.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Deleted.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Key.</param>
            <param name="versionId">Version ID.</param>
            <param name="deleteMarker">Delete marker.</param>
            <param name="deleteMarkerVersionId">Delete marker version ID.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.DeleteMultiple">
            <summary>
            Request to delete multiple resources.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.DeleteMultiple.Quiet">
            <summary>
            Enable or disable quiet deletion.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.DeleteMultiple.Objects">
            <summary>
            List of objects to delete.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.DeleteMultiple.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.DeleteMultiple.#ctor(System.Boolean,System.Collections.Generic.List{S3ServerLibrary.S3Objects.Object})">
            <summary>
            Instantiate.
            </summary>
            <param name="quiet">Quiet.</param>
            <param name="objects">Objects.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.DeleteResult">
            <summary>
            Result from a delete operation.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.DeleteResult.DeletedObjects">
            <summary>
            List of deleted resources.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.DeleteResult.Errors">
            <summary>
            List of errors encountered during the operation.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.DeleteResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.DeleteResult.#ctor(System.Collections.Generic.List{S3ServerLibrary.S3Objects.Deleted},System.Collections.Generic.List{S3ServerLibrary.S3Objects.Error})">
            <summary>
            Instantiate.
            </summary>
            <param name="deleted">Delete.</param>
            <param name="error">Error.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Error">
            <summary>
            Amazon S3 error.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Error.Key">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Error.VersionId">
            <summary>
            The version identifier for the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Error.RequestId">
            <summary>
            Unique identifier for the request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Error.Resource">
            <summary>
            The resource incident to the request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Error.Code">
            <summary>
            Error code.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Error.Message">
            <summary>
            Message associated with the error.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Error.HttpStatusCode">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Error.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Error.#ctor(S3ServerLibrary.S3Objects.ErrorCode,System.String,System.String,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="error">ErrorCode.</param>
            <param name="key">Key.</param>
            <param name="versionId">Version ID.</param>
            <param name="requestId">Request ID.</param>
            <param name="resource">Resource.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.ErrorCode">
            <summary>
            Amazon S3 error code.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.AccessDenied">
            <summary>
            Access denied.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.AccountProblem">
            <summary>
            There is a problem with your AWS account that prevents the operation from completing successfully.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.AllAccessDisabled">
            <summary>
            All access to this Amazon S3 resource has been disabled.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.AmbiguousGrantByEmailAddress">
            <summary>
            The email address you provided is associated with more than one account.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.AuthorizationHeaderMalformed">
            <summary>
            The authorization header you provided is invalid.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.BadDigest">
            <summary>
            The Content-MD5 you specified did not match what we received.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.BucketAlreadyExists">
            <summary>
            The requested bucket name is not available. The bucket namespace is shared by all users of the system. Please select a different name and try again.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.BucketAlreadyOwnedByYou">
            <summary>
            The bucket you tried to create already exists, and you own it.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.BucketNotEmpty">
            <summary>
            The bucket you tried to delete is not empty.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.CredentialsNotSupported">
            <summary>
            This request does not support credentials.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.CrossLocationLoggingProhibited">
            <summary>
            Cross-location logging not allowed. Buckets in one geographic location cannot log information to a bucket in another location.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.EntityTooSmall">
            <summary>
            Your proposed upload is smaller than the minimum allowed object size.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.EntityTooLarge">
            <summary>
            Your proposed upload exceeds the maximum allowed object size.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.ExpiredToken">
            <summary>
            The provided token has expired.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.IllegalVersioningConfigurationException">
            <summary>
            Indicates that the versioning configuration specified in the request is invalid.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.IncompleteBody">
            <summary>
            You did not provide the number of bytes specified by the Content-Length HTTP header.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.IncorrectNumberOfFilesInPostRequest">
            <summary>
            POST requires exactly one file upload per request.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InlineDataTooLarge">
            <summary>
            Inline data exceeds the maximum allowed size.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InternalError">
            <summary>
            We encountered an internal error. Please try again.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidAccessKeyId">
            <summary>
            The AWS access key ID you provided does not exist in our records.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidAddressingHeader">
            <summary>
            You must specify the Anonymous role.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidArgument">
            <summary>
            Invalid Argument.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidBucketName">
            <summary>
            The specified bucket is not valid.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidBucketState">
            <summary>
            The request is not valid with the current state of the bucket.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidDigest">
            <summary>
            The Content-MD5 you specified is not valid.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidEncryptionAlgorithmError">
            <summary>
            The encryption request you specified is not valid. The valid value is AES256.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidLocationConstraint">
            <summary>
            The specified location constraint is not valid.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidObjectState">
            <summary>
            The operation is not valid for the current state of the object.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidPart">
            <summary>
            One or more of the specified parts could not be found. The part might not have been uploaded, or the specified entity tag might not have matched the part's entity tag.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidPartOrder">
            <summary>
            The list of parts was not in ascending order. Parts list must be specified in order by part number.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidPayer">
            <summary>
            All access to this object has been disabled.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidPolicyDocument">
            <summary>
            The content of the form does not meet the conditions specified in the policy document.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidRange">
            <summary>
            The requested range cannot be satisfied.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidRequest">
            <summary>
            Your request is invalid.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidSecurity">
            <summary>
            The provided security credentials are not valid.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidSOAPRequest">
            <summary>
            The SOAP request body is invalid.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidStorageClass">
            <summary>
            The storage class you specified is not valid.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidTargetBucketForLogging">
            <summary>
            The target bucket for logging does not exist, is not owned by you, or does not have the appropriate grants for the log-delivery group.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidToken">
            <summary>
            The provided token is malformed or otherwise invalid.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.InvalidURI">
            <summary>
            Couldn't parse the specified URI.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.KeyTooLongError">
            <summary>
            Your key is too long.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MalformedACLError">
            <summary>
            The XML you provided was not well-formed or did not validate against our published schema.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MalformedPOSTRequest">
            <summary>
            The body of your POST request is not well-formed multipart/form-data.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MalformedXML">
            <summary>
            The XML you provided was not well-formed or did not validate against our published schema.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MaxMessageLengthExceeded">
            <summary>
            Your request was too big.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MaxPostPreDataLengthExceededError">
            <summary>
            Your POST request fields preceding the upload file were too large.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MetadataTooLarge">
            <summary>
            Your metadata headers exceed the maximum allowed metadata size.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MethodNotAllowed">
            <summary>
            The specified method is not allowed against this resource.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MissingAttachment">
            <summary>
            A SOAP attachment was expected, but none were found.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MissingContentLength">
            <summary>
            You must provide the Content-Length HTTP header.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MissingRequestBodyError">
            <summary>
            Request body is empty.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MissingSecurityElement">
            <summary>
            The SOAP 1.1 request is missing a security element.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.MissingSecurityHeader">
            <summary>
            Your request is missing a required header.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.NoLoggingStatusForKey">
            <summary>
            There is no such thing as a logging status subresource for a key.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.NoSuchBucket">
            <summary>
            The specified bucket does not exist.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.NoSuchBucketPolicy">
            <summary>
            The specified bucket does not have a bucket policy.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.NoSuchKey">
            <summary>
            The specified key does not exist.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.NoSuchLifecycleConfiguration">
            <summary>
            The lifecycle configuration does not exist.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.NoSuchUpload">
            <summary>
            The specified multipart upload does not exist. The upload ID might be invalid, or the multipart upload might have been aborted or completed.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.NoSuchVersion">
            <summary>
            The version ID specified in the request does not match an existing version.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.NotImplemented">
            <summary>
            A header you provided implies functionality that is not implemented.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.NotSignedUp">
            <summary>
            Your account is not signed up for the Amazon S3 service.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.OperationAborted">
            <summary>
            A conflicting conditional operation is currently in progress against this resource. Try again.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.PermanentRedirect">
            <summary>
            The bucket you are attempting to access must be addressed using the specified endpoint. Send all future requests to this endpoint.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.PreconditionFailed">
            <summary>
            At least one of the preconditions you specified did not hold.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.Redirect">
            <summary>
            Temporary redirect.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.RestoreAlreadyInProgress">
            <summary>
            Object restore is already in progress.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.RequestIsNotMultiPartContent">
            <summary>
            Bucket POST must be of the enclosure-type multipart/form-data.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.RequestTimeout">
            <summary>
            Your socket connection to the server was not read from or written to within the timeout period.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.RequestTimeTooSkewed">
            <summary>
            The difference between the request time and the server's time is too large.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.RequestTorrentOfBucketError">
            <summary>
            Requesting the torrent file of a bucket is not permitted.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.SignatureDoesNotMatch">
            <summary>
            The request signature we calculated does not match the signature you provided.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.ServiceUnavailable">
            <summary>
            Service unavailable.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.SlowDown">
            <summary>
            Reduce your request rate.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.TemporaryRedirect">
            <summary>
            You are being redirected to the bucket while DNS updates.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.TokenRefreshRequired">
            <summary>
            The provided token must be refreshed.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.TooManyBuckets">
            <summary>
            You have attempted to create more buckets than allowed.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.UnexpectedContent">
            <summary>
            This request does not support content.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.UnresolvableGrantByEmailAddress">
            <summary>
            The email address you provided does not match any account on record.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.UserKeyMustBeSpecified">
            <summary>
            The bucket POST must contain the specified field name. If it is specified, check the order of the fields.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ErrorCode.ServerSideEncryptionConfigurationNotFoundError">
            <summary>
            The server side encryption configuration was not found.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.ErrorDocument">
            <summary>
            Object that should serve as the document to return should an error be encountered.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ErrorDocument.Key">
            <summary>
            The key of the object that should serve as the error document.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ErrorDocument.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ErrorDocument.#ctor(System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Key.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Grant">
            <summary>
            A grant allowing a grantee permissiont to a resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Grant.Grantee">
            <summary>
            The recipient of the permission.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Grant.Permission">
            <summary>
            The permission given to the recipient.
            Valid values are FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Grant.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Grant.#ctor(S3ServerLibrary.S3Objects.Grantee,S3ServerLibrary.S3Objects.PermissionEnum)">
            <summary>
            Instantiate.
            </summary>
            <param name="grantee">Grantee.</param>
            <param name="permission">Permission.  Valid values are FULL_CONTROL, WRITE, WRITE_ACP, READ, READ_ACP.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Grantee">
            <summary>
            A permission recipient.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Grantee.ID">
            <summary>
            ID of the grantee.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Grantee.DisplayName">
            <summary>
            Display name.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Grantee.URI">
            <summary>
            For a group, the URI of the group.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Grantee.GranteeType">
            <summary>
            Type of grantee.
            Valid values are CanonicalUser, AmazonCustomerByEmail, Group.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Grantee.EmailAddress">
            <summary>
            Email address of the grantee.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Grantee.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Grantee.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="id">ID.</param>
            <param name="displayName">Display name.</param>
            <param name="uri">URI.</param>
            <param name="granteeType">Grantee type.  Valid values are CanonicalUser, AmazonCustomerByEmail, Group.</param>
            <param name="email">Email.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.CanonicalUser">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.CanonicalUser.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Group">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Group.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.AmazonCustomerByEmail">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.AmazonCustomerByEmail.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.IndexDocument">
            <summary>
            Parameters for the object that should serve as the index document for the bucket.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.IndexDocument.Suffix">
            <summary>
            The suffix to use for the index document.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.IndexDocument.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.IndexDocument.#ctor(System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="suffix">Suffix.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.LegalHold">
            <summary>
            Legal hold status of a resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.LegalHold.Status">
            <summary>
            Legal hold status.
            Valid values are null, ON, OFF.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.LegalHold.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.LegalHold.#ctor(System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="status">Status.  Valid values are null, ON, OFF.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.ListAllMyBucketsResult">
            <summary>
            Result from a ListAllMyBuckets request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListAllMyBucketsResult.Owner">
            <summary>
            Bucket owner.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListAllMyBucketsResult.Buckets">
            <summary>
            Buckets owned by the user.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ListAllMyBucketsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ListAllMyBucketsResult.#ctor(S3ServerLibrary.S3Objects.Owner,S3ServerLibrary.S3Objects.Buckets)">
            <summary>
            Instantiate.
            </summary>
            <param name="owner">Owmer/</param>
            <param name="buckets">Buckets.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.ListBucketResult">
            <summary>
            Result from a ListBucket operation.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.Name">
            <summary>
            Name of the bucket.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.Prefix">
            <summary>
            Prefix specified in the request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.Marker">
            <summary>
            Marker.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.KeyCount">
            <summary>
            Number of keys.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.MaxKeys">
            <summary>
            Maximum number of keys.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.Delimiter">
            <summary>
            Delimiter.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.EncodingType">
            <summary>
            Encoding type.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.IsTruncated">
            <summary>
            Indicates if the response is truncated.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.NextContinuationToken">
            <summary>
            The next continuation token to supply to continue the query.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.Contents">
            <summary>
            Bucket contents.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.CommonPrefixes">
            <summary>
            Common prefixes.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListBucketResult.BucketRegion">
            <summary>
            Bucket region string.  Not included in the XML, but rather as the HTTP header x-amz-bucket-region.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ListBucketResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ListBucketResult.#ctor(System.String,System.Collections.Generic.List{S3ServerLibrary.S3Objects.ObjectMetadata},System.Int32,System.Int32,System.String,System.String,System.String,System.Boolean,System.String,S3ServerLibrary.S3Objects.CommonPrefixes,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="name">Name.</param>
            <param name="contents">Contents.</param>
            <param name="keyCount">Key count.</param>
            <param name="maxKeys">Max keys.</param>
            <param name="prefix">Prefix.</param>
            <param name="marker">Marker.</param>
            <param name="delimiter">Delimiter.</param>
            <param name="isTruncated">Is truncated.</param>
            <param name="nextToken">Next continuation token.</param>
            <param name="prefixes">Prefixes</param>
            <param name="bucketRegion">Bucket region.</param>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ListBucketResult.ShouldSerializeMarker">
            <summary>
            Helper method for XML serialization.
            </summary>
            <returns>Boolean</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ListBucketResult.ShouldSerializeNextContinuationToken">
            <summary>
            Helper method for XML serialization.
            </summary>
            <returns>Boolean</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ListBucketResult.ShouldSerializeCommonPrefixes">
            <summary>
            Helper method for XML serialization.
            </summary>
            <returns>Boolean</returns>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.ListVersionsResult">
            <summary>
            Result from a ListVersions operation.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListVersionsResult.Name">
            <summary>
            Name of the bucket.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListVersionsResult.Prefix">
            <summary>
            Prefix specified in the request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListVersionsResult.KeyMarker">
            <summary>
            Key marker.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListVersionsResult.VersionIdMarker">
            <summary>
            Version ID marker.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListVersionsResult.MaxKeys">
            <summary>
            Maximum number of keys.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListVersionsResult.IsTruncated">
            <summary>
            Indicates if the response is truncated.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListVersionsResult.Versions">
            <summary>
            Object versions.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListVersionsResult.DeleteMarkers">
            <summary>
            Delete markers.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ListVersionsResult.BucketRegion">
            <summary>
            Bucket region string.  Not included in the XML, but rather as the HTTP header x-amz-bucket-region.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ListVersionsResult.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ListVersionsResult.#ctor(System.String,System.Collections.Generic.List{S3ServerLibrary.S3Objects.ObjectVersion},System.Collections.Generic.List{S3ServerLibrary.S3Objects.DeleteMarker},System.Int32,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="name">Bucket name.</param>
            <param name="versions">Versions.</param>
            <param name="maxKeys">Max keys.</param>
            <param name="prefix">Prefix.</param>
            <param name="keyMarker">Key marker.</param>
            <param name="versionIdMarker">Version ID marker.</param>
            <param name="isTruncated">Is truncated.</param>
            <param name="deleteMarkers">Delete markers.</param>
            <param name="bucketRegion">Bucket region.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.LocationConstraint">
            <summary>
            Location constraint for a resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.LocationConstraint.Text">
            <summary>
            Text, i.e. the region.
            Valid values are valid S3 regions, i.e. us-west-1.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.LocationConstraint.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.LocationConstraint.#ctor(System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="region">Region.  Valid values are valid S3 regions, i.e. us-west-1.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.LoggingEnabled">
            <summary>
            Logging status.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.LoggingEnabled.TargetBucket">
            <summary>
            The bucket where logs are stored.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.LoggingEnabled.TargetPrefix">
            <summary>
            The prefix for objects used to store logging data.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.LoggingEnabled.TargetGrants">
            <summary>
            The grants allowing others to access logging data.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.LoggingEnabled.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.LoggingEnabled.#ctor(System.String,System.String,S3ServerLibrary.S3Objects.TargetGrants)">
            <summary>
            Instantiate.
            </summary>
            <param name="targetBucket">Target bucket.</param>
            <param name="targetPrefix">Target prefix.</param>
            <param name="targetGrants">Target grants.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.MfaDeleteStatusEnum">
            <summary>
            Permission types used by S3. 
            See https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html for details.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.MfaDeleteStatusEnum.Enabled">
            <summary>
            Enabled.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.MfaDeleteStatusEnum.Disabled">
            <summary>
            Disabled.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Object">
            <summary>
            Object.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Object.Key">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Object.VersionId">
            <summary>
            Version ID for the object.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Object.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Object.#ctor(System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Key.</param>
            <param name="versionId">Version ID.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.ObjectMetadata">
            <summary>
            Object metadata.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ObjectMetadata.Key">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ObjectMetadata.LastModified">
            <summary>
            Timestamp from the last modification of the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ObjectMetadata.ETag">
            <summary>
            ETag of the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ObjectMetadata.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ObjectMetadata.Size">
            <summary>
            The size in bytes of the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ObjectMetadata.StorageClass">
            <summary>
            The class of storage where the resource resides.
            Valid values are STANDARD, REDUCED_REDUNDANCY, GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, OUTPOSTS.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.ObjectMetadata.Owner">
            <summary>
            Object owner.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ObjectMetadata.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ObjectMetadata.#ctor(System.String,System.DateTime,System.String,System.Int64,S3ServerLibrary.S3Objects.Owner,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Key.</param>
            <param name="lastModified">Last modified.</param>
            <param name="eTag">ETag.</param>
            <param name="size">Size.</param>
            <param name="owner">Owner.</param>
            <param name="storageClass">Storage class.  Valid values are STANDARD, REDUCED_REDUNDANCY, GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, OUTPOSTS.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Owner">
            <summary>
            Resource owner.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Owner.ID">
            <summary>
            ID of the owner.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Owner.DisplayName">
            <summary>
            Display name of the owner.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Owner.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Owner.#ctor(System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="id">ID.</param>
            <param name="displayName">Display name.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.PermissionEnum">
            <summary>
            Permission types used by S3. 
            See https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html for details.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.PermissionEnum.FullControl">
            <summary>
            Full control.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.PermissionEnum.Write">
            <summary>
            Write.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.PermissionEnum.WriteAcp">
            <summary>
            Write access control permissions.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.PermissionEnum.Read">
            <summary>
            Read.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.PermissionEnum.ReadAcp">
            <summary>
            Read access control permissions.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.ProtocolEnum">
            <summary>
            Protocol types used by S3 for redirects. 
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ProtocolEnum.Http">
            <summary>
            HTTP.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.ProtocolEnum.Https">
            <summary>
            HTTPS.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Redirect">
            <summary>
            Redirect rule for a bucket's website configuration.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Redirect.HostName">
            <summary>
            The hostname to which the request should be redirected.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Redirect.HttpRedirectCode">
            <summary>
            The HTTP redirect code to use to perform the redirect.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Redirect.Protocol">
            <summary>
            The protocol that should be used with the redirect.
            Valid values are http, https.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Redirect.ReplaceKeyPrefixWith">
            <summary>
            Replace the key prefix as specified when the redirect rule matches.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Redirect.ReplaceKeyWith">
            <summary>
            Replace the entire key as specified when the redirect rule matches.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Redirect.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Redirect.#ctor(System.String,System.Int32,S3ServerLibrary.S3Objects.ProtocolEnum,System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="hostname">Hostname.</param>
            <param name="httpRedirectCode">HTTP redirect code.</param>
            <param name="protocol">Protocol.  Valid values are http, https.</param>
            <param name="replaceKeyPrefixWith">Replace key prefix with.</param>
            <param name="replaceKeyWith">Replace key with.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.RedirectAllRequestsTo">
            <summary>
            Host and protocol to which all requests should be redirected.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.RedirectAllRequestsTo.HostName">
            <summary>
            Redirect all requests to the specified hostname.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.RedirectAllRequestsTo.Protocol">
            <summary>
            The protocol that should be used with the redirect.
            Valid values are http, https.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.RedirectAllRequestsTo.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.RedirectAllRequestsTo.#ctor(System.String,S3ServerLibrary.S3Objects.ProtocolEnum)">
            <summary>
            Instantiate.
            </summary>
            <param name="hostname">Hostname.</param>
            <param name="protocol">Protocol.  Valid values are http, https.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Retention">
            <summary>
            Retention status of a resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Retention.Mode">
            <summary>
            Retention mode.
            Valid values are null, GOVERNANCE, COMPLIANCE.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Retention.RetainUntilDate">
            <summary>
            Date upon which the resource shall no longer be retained.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Retention.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Retention.#ctor(S3ServerLibrary.S3Objects.RetentionModeEnum,System.Nullable{System.DateTime})">
            <summary>
            Instantiate.
            </summary>
            <param name="mode">Mode.  Valid values are null, GOVERNANCE, COMPLIANCE.</param>
            <param name="retainUntilDate">Retain until.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.RetentionModeEnum">
            <summary>
            Retention modes used by S3. 
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.RetentionModeEnum.None">
            <summary>
            Null.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.RetentionModeEnum.Governance">
            <summary>
            Governance.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.RetentionModeEnum.Compliance">
            <summary>
            Compliance.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.RoutingRule">
            <summary>
            Routing rule for a bucket's website configuration.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.RoutingRule.Condition">
            <summary>
            Condition that must be met in order to match a routing rule for a bucket website configuration.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.RoutingRule.Redirect">
            <summary>
            Redirect rule for a bucket's website configuration.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.RoutingRule.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.RoutingRule.#ctor(S3ServerLibrary.S3Objects.Condition,S3ServerLibrary.S3Objects.Redirect)">
            <summary>
            Instantiate.
            </summary>
            <param name="condition">Condition.</param>
            <param name="redirect">Redirect.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.RoutingRules">
            <summary>
            Routing rules for a bucket's website configuration.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.RoutingRules.Rules">
            <summary>
            List of routing rules.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.RoutingRules.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.RoutingRules.#ctor(System.Collections.Generic.List{S3ServerLibrary.S3Objects.RoutingRule})">
            <summary>
            Instantiate.
            </summary>
            <param name="rules">Rules.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.StorageClassEnum">
            <summary>
            Storage classes used by S3. 
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.StorageClassEnum.Standard">
            <summary>
            Standard.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.StorageClassEnum.ReducedRedundancy">
            <summary>
            Reduced redundancy.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.StorageClassEnum.Glacier">
            <summary>
            Glacier.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.StorageClassEnum.StandardIa">
            <summary>
            Standard IA.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.StorageClassEnum.OneZoneIa">
            <summary>
            One zone IA.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.StorageClassEnum.IntelligentTiering">
            <summary>
            Intelligent tiering.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.StorageClassEnum.DeepArchive">
            <summary>
            Deep archive.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.StorageClassEnum.Outposts">
            <summary>
            Outposts.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.StorageClassEnum.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Tag">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Tag.Key">
            <summary>
            Key.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Tag.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Tag.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Tag.#ctor(System.String,System.String)">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Key.</param>
            <param name="val">Value.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.Tagging">
            <summary>
            Tag metadata.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.Tagging.Tags">
            <summary>
            Tag set.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Tagging.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.Tagging.#ctor(S3ServerLibrary.S3Objects.TagSet)">
            <summary>
            Instantiate.
            </summary>
            <param name="tags">Tags.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.TagSet">
            <summary>
            Tag set.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.TagSet.Tags">
            <summary>
            Tag.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.TagSet.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.TagSet.#ctor(System.Collections.Generic.List{S3ServerLibrary.S3Objects.Tag})">
            <summary>
            Instantiate.
            </summary>
            <param name="tags">Tags.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.TargetGrants">
            <summary>
            Recipients of the grants to access the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.TargetGrants.Grants">
            <summary>
            Grant specifying to whom rights are provided to the resource.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.TargetGrants.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.TargetGrants.#ctor(System.Collections.Generic.List{S3ServerLibrary.S3Objects.Grant})">
            <summary>
            Instantiate.
            </summary>
            <param name="grants">Grants.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.VersionedEntity">
            <summary>
            Object version.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.VersionedEntity.Key">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.VersionedEntity.VersionId">
            <summary>
            The version identifier for the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.VersionedEntity.IsLatest">
            <summary>
            Indicates if this version is the latest version of the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.VersionedEntity.LastModified">
            <summary>
            Timestamp from the last modification of the resource.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.VersionedEntity.ETag">
            <summary>
            Object ETag.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.VersionedEntity.Size">
            <summary>
            Content length of the object.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.VersionedEntity.StorageClass">
            <summary>
            The class of storage where the resource resides.
            Valid values are STANDARD, REDUCED_REDUNDANCY, GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, OUTPOSTS.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.VersionedEntity.Owner">
            <summary>
            Object owner.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.VersionedEntity.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.ObjectVersion">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ObjectVersion.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.ObjectVersion.#ctor(System.String,System.String,System.Boolean,System.DateTime,System.String,System.Nullable{System.Int64},S3ServerLibrary.S3Objects.Owner,S3ServerLibrary.S3Objects.StorageClassEnum)">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Key.</param>
            <param name="versionId">Version ID.</param>
            <param name="lastModified">Last modified.</param>
            <param name="isLatest">Is latest.</param>
            <param name="eTag">ETag.</param>
            <param name="size">Size.</param>
            <param name="owner">Owner.</param>
            <param name="storageClass">Storage class.  Valid values are STANDARD, REDUCED_REDUNDANCY, GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE, OUTPOSTS.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.DeleteMarker">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.DeleteMarker.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.DeleteMarker.#ctor(System.String,System.String,System.Boolean,System.DateTime,S3ServerLibrary.S3Objects.Owner)">
            <summary>
            Instantiate.
            </summary>
            <param name="key">Key.</param>
            <param name="versionId">Version ID.</param>
            <param name="lastModified">Last modified.</param>
            <param name="isLatest">Is latest.</param>
            <param name="owner">Owner.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.VersioningConfiguration">
            <summary>
            Bucket versioning configuration.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.VersioningConfiguration.Status">
            <summary>
            Status of the versioning configuration.
            Valid values are null, Enabled, Suspended.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.VersioningConfiguration.MfaDelete">
            <summary>
            Indicates if multi-factor authentication is enabled for delete operations.
            Valid values are null, Enabled, Disabled.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.VersioningConfiguration.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.VersioningConfiguration.#ctor(S3ServerLibrary.S3Objects.VersioningStatusEnum,S3ServerLibrary.S3Objects.MfaDeleteStatusEnum)">
            <summary>
            Instantiate.
            </summary>
            <param name="status">Status.  Valid values are null, Enabled, Suspended.</param>
            <param name="mfaDelete">MFA delete setting.  Valid values are null, Enabled, Disabled.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.VersioningStatusEnum">
            <summary>
            Permission types used by S3. 
            See https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html for details.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.VersioningStatusEnum.Enabled">
            <summary>
            Enabled.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Objects.VersioningStatusEnum.Suspended">
            <summary>
            Suspended.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Objects.WebsiteConfiguration">
            <summary>
            Result from a GetBucketWebsite request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.WebsiteConfiguration.RedirectAllRequestsTo">
            <summary>
            Host and protocol to which all requests should be redirected.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.WebsiteConfiguration.IndexDocument">
            <summary>
            Parameters for the object that should serve as the index document for the bucket.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.WebsiteConfiguration.ErrorDocument">
            <summary>
            Object that should serve as the document to return should an error be encountered.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Objects.WebsiteConfiguration.RoutingRules">
            <summary>
            Routing rules for a bucket's website configuration.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.WebsiteConfiguration.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Objects.WebsiteConfiguration.#ctor(S3ServerLibrary.S3Objects.RedirectAllRequestsTo,S3ServerLibrary.S3Objects.IndexDocument,S3ServerLibrary.S3Objects.ErrorDocument,S3ServerLibrary.S3Objects.RoutingRules)">
            <summary>
            Instantiate.
            </summary>
            <param name="redirectTo">Redirect all requests to.</param>
            <param name="indexDoc">Index document.</param>
            <param name="errorDoc">Error document.</param>
            <param name="routingRules">Routing rules.</param>
        </member>
        <member name="T:S3ServerLibrary.S3PermissionType">
            <summary>
            Permission types used by S3. 
            See https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html for details.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3PermissionType.BucketRead">
            <summary>
            Bucket read operations.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3PermissionType.BucketWrite">
            <summary>
            Bucket write operations.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3PermissionType.BucketReadAcp">
            <summary>
            Bucket read access control policy permissions.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3PermissionType.BucketWriteAcp">
            <summary>
            Bucket write access control policy permissions.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3PermissionType.FullControl">
            <summary>
            Full control.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3PermissionType.ObjectRead">
            <summary>
            Bucket read operations.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3PermissionType.ObjectWrite">
            <summary>
            Object write operations.
            This permission should not be used; refer to https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3PermissionType.ObjectReadAcp">
            <summary>
            Object read access control policy permissions.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3PermissionType.ObjectWriteAcp">
            <summary>
            Object write access control policy permissions.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3PermissionType.NotApplicable">
            <summary>
            No permission required or permission unknown.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Request">
            <summary>
            S3 request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.TimestampUtc">
            <summary>
            Time of creation in UTC.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.RequestId">
            <summary>
            Request ID.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.RequestStyle">
            <summary>
            Indicates if the request includes the bucket name in the hostname or not.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.RequestType">
            <summary>
            Indicates the type of S3 request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Chunked">
            <summary>
            Indicates if chunked transfer-encoding is in use.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Region">
            <summary>
            AWS region.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Hostname">
            <summary>
            Hostname.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Host">
            <summary>
            Host header value.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.BaseDomain">
            <summary>
            Base domain identified in the hostname.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Bucket">
            <summary>
            Bucket.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Key">
            <summary>
            Object key.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Prefix">
            <summary>
            Object key prefix.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Delimiter">
            <summary>
            Delimiter.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Marker">
            <summary>
            Marker.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.MaxKeys">
            <summary>
            Maximum number of keys to retrieve in an enumeration.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.VersionId">
            <summary>
            Object version ID.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Authorization">
            <summary>
            Authorization header string, in full.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.SignatureVersion">
            <summary>
            Signature version from authorization header.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Signature">
            <summary>
            Signature from authorization header.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.ContentType">
            <summary>
            Content type.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.ContentMd5">
            <summary>
            Content MD5 hash from request headers.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.ContentSha256">
            <summary>
            Content SHA256 hash from request headers.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.ContentLength">
            <summary>
            Content length.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Date">
            <summary>
            Date parameter.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Expires">
            <summary>
            Expiration parameter from authorization header.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.AccessKey">
            <summary>
            Access key, parsed from authorization header.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.RangeStart">
            <summary>
            Start value from the Range header.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.RangeEnd">
            <summary>
            End value from the Range header.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.ContinuationToken">
            <summary>
            Continuation token.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.IsServiceRequest">
            <summary>
            Indicates if the request is a service request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.IsBucketRequest">
            <summary>
            Indicates if the request is a bucket request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.IsObjectRequest">
            <summary>
            Indicates if the request is an object request.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.PermissionsRequired">
            <summary>
            Lists the permission typically required for this type of request.
            See https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html for details.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.SignedHeaders">
            <summary>
            List of signed headers.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.Data">
            <summary>
            Stream containing the request body.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.DataAsString">
            <summary>
            Data stream as a string.  Fully reads the data stream.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Request.DataAsBytes">
            <summary>
            Data stream as a byte array.  Fully reads the data stream.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Request.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Request.#ctor(S3ServerLibrary.S3Context,System.Collections.Generic.List{System.String},System.Action{System.String})">
            <summary>
            Instantiates the object.
            </summary>
            <param name="ctx">S3 context.</param>
            <param name="baseDomains">List of base domains against which the hostname should be evaluated to identify the bucket.  For instance, to resolve buckets for *.localhost, specify '.localhost'.</param> 
            <param name="logger">Method to invoke to send log messages.</param> 
        </member>
        <member name="M:S3ServerLibrary.S3Request.ParseHttpContext">
            <summary>
            Populate members using an HttpContext.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Request.HeaderExists(System.String,System.Boolean)">
            <summary>
            Determine if a header exists.
            </summary>
            <param name="key">Header key.</param>
            <param name="caseSensitive">Specify whether a case sensitive search should be used.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Request.QuerystringExists(System.String,System.Boolean)">
            <summary>
            Determine if a querystring entry exists.
            </summary>
            <param name="key">Querystring key.</param>
            <param name="caseSensitive">Specify whether a case sensitive search should be used.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Request.RetrieveHeaderValue(System.String)">
            <summary>
            Retrieve a header (or querystring) value.
            </summary>
            <param name="key">Key.</param>
            <returns>Value.</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Request.RetrieveQueryValue(System.String)">
            <summary>
            Retrieve a querystring value.
            </summary>
            <param name="key">Key.</param>
            <returns>Value.</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Request.ReadChunk">
            <summary>
            Read a chunk from the request body.
            </summary>
            <returns>Chunk.</returns>
        </member>
        <member name="T:S3ServerLibrary.S3RequestStyle">
            <summary>
            The type of request, specifically whether or not the bucket is included in the hostname.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestStyle.Unknown">
            <summary>
            Unknown request style.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestStyle.PathStyle">
            <summary>
            Path-style request, i.e. bucket is in the URL and not in the hostname, e.g. http://[hostname]/[bucket]/[key].
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestStyle.VirtualHostedStyle">
            <summary>
            Virtual-hosted style request, i.e. bucket is in the hostname and not in the URL, e.g. http://[bucket].[hostname]/[key].
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3RequestType">
            <summary>
            The type of S3 request, identified by parsing the request.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.Unknown">
            <summary>
            Unknown request type.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ListBuckets">
            <summary>
            List buckets owned by the user.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketDelete">
            <summary>
            Delete a bucket.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketDeleteTags">
            <summary>
            Delete bucket tags.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketDeleteWebsite">
            <summary>
            Delete a bucket's website configuration.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketExists">
            <summary>
            Check if a bucket exists.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketRead">
            <summary>
            List objects in a bucket.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketReadAcl">
            <summary>
            Read a bucket's access control list.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketReadLocation">
            <summary>
            Read a bucket's location, i.e. its region.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketReadLogging">
            <summary>
            Read a bucket's logging configuration.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketReadTags">
            <summary>
            Read a bucket's tags.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketReadVersioning">
            <summary>
            Read a bucket's versioning configuration.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketReadVersions">
            <summary>
            List object versions.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketReadWebsite">
            <summary>
            Read a bucket's website configuration.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketWrite">
            <summary>
            Create a bucket.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketWriteAcl">
            <summary>
            Write a bucket's access control list.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketWriteLogging">
            <summary>
            Write a bucket's logging configuration.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketWriteTags">
            <summary>
            Write a bucket's tags.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketWriteVersioning">
            <summary>
            Write a bucket's versioning policy.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.BucketWriteWebsite">
            <summary>
            Write a bucket's website configuration.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectDelete">
            <summary>
            Delete an object.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectDeleteMultiple">
            <summary>
            Delete multiple objects.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectDeleteTags">
            <summary>
            Delete object tags.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectExists">
            <summary>
            Check if an object exists.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectRead">
            <summary>
            Read an object's contents.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectReadAcl">
            <summary>
            Read an object's access control list.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectReadLegalHold">
            <summary>
            Read an object's legal hold status.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectReadRange">
            <summary>
            Read a specific range of bytes from an object.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectReadRetention">
            <summary>
            Read an object's retention policy.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectReadTags">
            <summary>
            Read an object's tags.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectWrite">
            <summary>
            Create an object.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectWriteAcl">
            <summary>
            Write an object's access control list.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectWriteLegalHold">
            <summary>
            Write an object's legal hold status.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectWriteRetention">
            <summary>
            Write an object's retention policy.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3RequestType.ObjectWriteTags">
            <summary>
            Write tags to an object.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3Response">
            <summary>
            S3 response.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Response.StatusCode">
            <summary>
            The HTTP status code to return to the requestor (client).
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Response.Headers">
            <summary>
            User-supplied headers to include in the response.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Response.ContentType">
            <summary>
            User-supplied content-type to include in the response.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Response.ContentLength">
            <summary>
            The length of the data in the response stream.  This value must be set before assigning the stream.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Response.Chunked">
            <summary>
            Enable or disable chunked transfer-encoding.
            By default this parameter is set to the value of Chunked in the S3Request object.
            If Chunked is false, use Send() APIs.
            If Chunked is true, use SendChunk() or SendFinalChunk() APIs.
            The Send(ErrorCode) API is valid for both conditions.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Response.Data">
            <summary>
            The data to return to the requestor.  Set ContentLength before assigning the stream.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Response.DataAsString">
            <summary>
            Data stream as a string.  Fully reads the data stream.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Response.DataAsBytes">
            <summary>
            Data stream as a byte array.  Fully reads the data stream.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Response.#ctor">
            <summary>
            Instantiate.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Response.#ctor(S3ServerLibrary.S3Context)">
            <summary>
            Instantiate the object without supplying a stream.  Useful for HEAD responses.
            </summary>
            <param name="ctx">S3 context.</param>
        </member>
        <member name="M:S3ServerLibrary.S3Response.#ctor(S3ServerLibrary.S3Context,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int64)">
            <summary>
            Instantiate the object without supplying a stream.  Useful for HEAD responses.
            </summary>
            <param name="ctx">S3 context.</param>
            <param name="statusCode">HTTP status code.</param>
            <param name="contentType">Content-type.</param>
            <param name="headers">HTTP headers.</param> 
            <param name="contentLength">Content length.</param>
        </member>
        <member name="M:S3ServerLibrary.S3Response.Send">
            <summary>
            Send the response with no data to the requestor and close the connection.
            </summary>
            <returns>True if successful.</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Response.Send(System.String)">
            <summary>
            Send the response with the supplied data to the requestor and close the connection.
            </summary>
            <param name="data">Data.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Response.Send(System.Byte[])">
            <summary>
            Send the response with the supplied data to the requestor and close the connection.
            </summary>
            <param name="data">Data.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Response.Send(System.Int64,System.IO.Stream)">
            <summary>
            Send the response with the supplied stream to the requestor and close the connection.
            </summary>
            <param name="contentLength">Content length.</param>
            <param name="stream">Stream containing data.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Response.Send(S3ServerLibrary.S3Objects.Error)">
            <summary>
            Send an error response to the requestor and close the connection.
            </summary>
            <param name="error">Error.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Response.Send(S3ServerLibrary.S3Objects.ErrorCode)">
            <summary>
            Send an error response to the requestor and close the connection.
            </summary>
            <param name="error">ErrorCode.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Response.SendChunk(System.Byte[])">
            <summary>
            Send a chunk of data using chunked transfer-encoding to the requestor.
            </summary>
            <param name="data">Chunk of data.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="M:S3ServerLibrary.S3Response.SendFinalChunk(System.Byte[])">
            <summary>
            Send the final chunk of data using chunked transfer-encoding to the requestor and close the connection.
            </summary>
            <param name="data">Final chunk of data.</param>
            <returns>True if successful.</returns>
        </member>
        <member name="T:S3ServerLibrary.S3Server">
            <summary>
            S3 server.  
            Bucket names must not be in the hostname; they must be in the URL path. 
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Server.IsListening">
            <summary>
            Determine if the server is listening.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Server.Logger">
            <summary>
            Method to invoke when sending a log message.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Server.Logging">
            <summary>
            Enable or disable logging for various items.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Server.Service">
            <summary>
            Callback methods for requests received for service operations.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Server.Bucket">
            <summary>
            Callback methods for requests received for bucket operations.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Server.Object">
            <summary>
            Callback methods for requests received for object operations.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Server.PreRequestHandler">
            <summary>
            Callback method to use prior to examining requests for AWS S3 APIs.
            Return true if you wish to terminate the request, otherwise, return false, which will further route the request.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Server.DefaultRequestHandler">
            <summary>
            Callback method to call when no matching AWS S3 API callback could be found. 
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3Server.PostRequestHandler">
            <summary>
            Callback method to call after a response has been sent.
            </summary>
        </member>
        <member name="P:S3ServerLibrary.S3Server.BaseDomains">
            <summary>
            The list of base domains against which incoming requests should be compared to identify the bucket name.
            For instance, if you wish to identify the bucket 'bucket' from a request to host 'bucket.mys3server.com', set this value to '.mys3server.com'.
            If the list is empty, or, a base domain cannot be identified, S3Server will assume that the bucket name is in the URL.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Server.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Instantiate.
            Using this constructor results in no pre-request handler (your own API handler), and no custom default request handler (when an S3 API cannot be matched).
            </summary>
            <param name="hostname">The hostname on which to listen for HTTP requests.  If you listen on a wildcard such as '*', '+', or '0.0.0.0', you must run with elevated/administrative privileges.</param>
            <param name="port">The TCP port number.</param>
            <param name="ssl">Enable or disable SSL.</param> 
        </member>
        <member name="M:S3ServerLibrary.S3Server.#ctor(System.String,System.Int32,System.Boolean,System.Func{S3ServerLibrary.S3Context,System.Threading.Tasks.Task})">
            <summary>
            Instantiate.
            Using this constructor results in no pre-request handler (your own API handler), but (if not null) allows a custom default request handler (when an S3 API cannot be matched).
            </summary>
            <param name="hostname">The hostname on which to listen for HTTP requests.  If you listen on a wildcard such as '*', '+', or '0.0.0.0', you must run with elevated/administrative privileges.</param>
            <param name="port">The TCP port number.</param>
            <param name="ssl">Enable or disable SSL.</param> 
            <param name="defaultRequestHandler">Default request handler used when no other callbacks can be found.</param>
        </member>
        <member name="M:S3ServerLibrary.S3Server.#ctor(System.String,System.Int32,System.Boolean,System.Func{S3ServerLibrary.S3Context,System.Threading.Tasks.Task{System.Boolean}},System.Func{S3ServerLibrary.S3Context,System.Threading.Tasks.Task})">
            <summary>
            Instantiate.
            Using this constructor results in (if not null) a pre-request handler (your own API handler), and (if not null) a custom default request handler (when an S3 API cannot be matched).
            </summary>
            <param name="hostname">The hostname on which to listen for HTTP requests.  If you listen on a wildcard such as '*', '+', or '0.0.0.0', you must run with elevated/administrative privileges.</param>
            <param name="port">The TCP port number.</param>
            <param name="ssl">Enable or disable SSL.</param>
            <param name="preRequestHandler">Request handler to call prior to evaluating for S3 requests, can be null.</param>
            <param name="defaultRequestHandler">Default request handler used when no other callbacks can be found.</param>
        </member>
        <member name="M:S3ServerLibrary.S3Server.Dispose">
            <summary>
            Tear down the client and dispose of background workers.
            Do not use the object after disposal.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Server.Start">
            <summary>
            Start accepting new connections.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Server.Stop">
            <summary>
            Stop accepting new connections.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.S3Server.Dispose(System.Boolean)">
            <summary>
            Dispose of the server.
            </summary>
            <param name="disposing">Disposing.</param>
        </member>
        <member name="T:S3ServerLibrary.S3Signatures">
            <summary>
            Internal class for validating S3 signatures.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.S3SignatureVersion">
            <summary>
            S3 signature version.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3SignatureVersion.Unknown">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3SignatureVersion.Version2">
            <summary>
            Version2.
            </summary>
        </member>
        <member name="F:S3ServerLibrary.S3SignatureVersion.Version4">
            <summary>
            Version4.
            </summary>
        </member>
        <member name="T:S3ServerLibrary.SerializationHelper">
            <summary>
            Serialization helper.
            </summary>
        </member>
        <member name="M:S3ServerLibrary.SerializationHelper.CopyObject``1(``0)">
            <summary>
            Copy an object.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="source">Source object.</param>
            <returns>Copy.</returns>
        </member>
        <member name="M:S3ServerLibrary.SerializationHelper.SerializeJson(System.Object,System.Boolean)">
            <summary>
            Serialize JSON.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Pretty print.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:S3ServerLibrary.SerializationHelper.DeserializeJson``1(System.String)">
            <summary>
            Deserialize JSON. 
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="json">JSON string.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:S3ServerLibrary.SerializationHelper.DeserializeJson``1(System.Byte[])">
            <summary>
            Deserialize JSON. 
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="data">JSON data.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:S3ServerLibrary.SerializationHelper.DeserializeXml``1(System.Byte[])">
            <summary>
            Deserialize XML.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="bytes">XML data.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:S3ServerLibrary.SerializationHelper.DeserializeXml``1(System.String)">
            <summary>
            Deserialize XML.
            </summary>
            <typeparam name="T">Type.</typeparam>
            <param name="xml">XML string.</param>
            <returns>Instance.</returns>
        </member>
        <member name="M:S3ServerLibrary.SerializationHelper.SerializeXml_Original(System.Object)">
            <summary>
            Serialize XML.
            </summary>
            <param name="obj">Object.</param>
            <returns>XML string.</returns>
        </member>
        <member name="M:S3ServerLibrary.SerializationHelper.SerializeXml(System.Object,System.Boolean)">
            <summary>
            Serialize XML.
            </summary>
            <param name="obj">Object.</param>
            <param name="pretty">Pretty print.</param>
            <returns>XML string.</returns>
        </member>
    </members>
</doc>
